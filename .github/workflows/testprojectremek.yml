# This is a basic workflow to help you get started with Actions
# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# mivel hoztuk létre
# kulcs : érték
name: Python application

# Controls when the workflow will run
# kulcs: lista. azon belül kulcs : érték
# on push, vagy on pull_request
# ha a fejlesztő push-ol a main ágba, akkor lefut ez a workflow (pull-request esetén is)
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# build az egyetlen kulcs jelenleg. a runs-on a környezet, majd a steps a lépések
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2 #szerezd meg a kódot
      - name: Set up Python 3.9  #telepítsük a pythont, fontos: 3.9 elég, mivel mindig a legújabbal futtatja, így nem kell, hogy 3.9.5, mert már kint van a 3.9.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
      - name: Install dependencies #telepítsük fel a requirements file-ból az összes többi dependenciát
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      - name: Test with pytest #futtassuk le az összes tesztet pytest segítségével
        run: | #futtasd le a pytest parancsot és használd az allure plugint hozzá, mely a pytestben meg van adva
          pytest --alluredir=allure-results 

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages
     
         # allure report integralasa
      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history
          keep_reports: 20

         #github pages letrehozasa
      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
